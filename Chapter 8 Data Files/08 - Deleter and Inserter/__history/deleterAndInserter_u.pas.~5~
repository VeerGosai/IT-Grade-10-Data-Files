unit deleterAndInserter_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TfrmDeleterAndInserter = class(TForm)
    lblPhrase: TLabel;
    lblHeader: TLabel;
    lblCharacterPosition: TLabel;
    btnDelete: TButton;
    edtPosition: TEdit;
    lblCharacter: TLabel;
    edtCharacter: TEdit;
    btnInsert: TButton;
    memPhrase: TMemo;
    procedure btnInsertClick(Sender: TObject);
    procedure btnDeleteClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmDeleterAndInserter: TfrmDeleterAndInserter;

implementation

{$R *.dfm}

procedure TfrmDeleterAndInserter.btnInsertClick(Sender: TObject);
var
  sPhrase, sStart, sEnd, sChar : String;
  i, iPosition : Integer;
begin
  sStart := '';
  sEnd := '';
  sPhrase := memPhrase.Text;
  sChar := edtCharacter.Text;
  iPosition := StrToInt(edtPosition.Text);

  for i := 1 to Length(sPhrase) do
  begin
    if i < iPosition then
      sStart := sStart + sPhrase[i];

    if i >= iPosition then
      sEnd := sEnd + sPhrase[i];
  end;

  sPhrase := sStart + sChar + sEnd;
  memPhrase.Text := sPhrase;
end;

procedure TfrmDeleterAndInserter.btnDeleteClick(Sender: TObject);
var
  sPhrase, sStart, sEnd : String;
  i, iPosition : Integer;
begin
  sStart := '';
  sEnd := '';
  sPhrase := memPhrase.Text;
  iPosition := StrToInt(edtPosition.Text);

  for i := 1 to Length(sPhrase) do
  begin
    if i < iPosition then
      sStart := sStart + sPhrase[i];

    if i > iPosition then
      sEnd := sEnd + sPhrase[i];
  end;

  sPhrase := sStart + sEnd;
  memPhrase.Text := sPhrase;
end;

end.
