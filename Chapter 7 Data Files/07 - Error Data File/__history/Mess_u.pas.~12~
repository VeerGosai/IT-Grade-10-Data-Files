unit Mess_u;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls;

type
  TForm1 = class(TForm)
    edtName: TEdit;
    edtCellNO: TEdit;
    btnNewUserName: TButton;
    btnPassword: TButton;
    memOutput: TMemo;
    lblName: TLabel;
    lblPassword: TLabel;
    procedure btnNewUserNameClick(Sender: TObject);
    procedure btnPasswordClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}
//user enters his cell number. Check for error // run loop to check that it is
//only  numbers. only 10 characters
//  Encrypt your cellno to use as a password  - get from different characters from the password
// basic encryption of name to use as username
//
procedure TForm1.btnNewUserNameClick(Sender: TObject);
var sNewUsername, sName:string;
   k, iTotal, iRandomNo: integer;
begin
  sName := edtName.Text;
  for k:=1 to length(sName) do
    begin
      if upcase(sName[k]) in ['A','E','I','O','U'] then
         Begin
           iRandomNo := Random(10);
           sNewUsername:= sNewUsername + inttostr(iRandomNo);
           iTotal := iTotal + iRandomNo;
         End // ends if true
     else
     sNewUsername := sNewUsername + sName[k];
    end; // ends loop
    memOutput.Lines.Add('Username: ' + sNewUsername + inttostr(iTotal) );
    end;

procedure TForm1.btnPasswordClick(Sender: TObject);
var sNewPassword, sCell:string;
    k: integer;
begin
  sCell := edtCellNo.Text;
  k:= 1;
  while k < 10 do
  begin
    case sCell[k] of
      '3' : SnewPassword := sNewPassword + '%';
      '6' : SnewPassword := sNewPassword + '*';
      '7' : SnewPassword := sNewPassword + '@';
      '9' : SnewPassword := sNewPassword + '#';

    else sNewPassword := sNewPassword + sCell[k];
    end ; //ends case
  memOutput.Lines.Add(sNewPassword) ;
  inc(k);
  end;
end;
end.


